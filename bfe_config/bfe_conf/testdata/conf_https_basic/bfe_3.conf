[server]
# listen port for http request
httpPort = 80
# listen port for https request
httpsPort = 443
# listen port for monitor request
# listen port for monitor request
monitorPort = 8080
# max number of CPUs to use
maxCpus = 8

# settings of communicate with http client
KeepAliveEnabled = true
ClientReadTimeout = 10

# modules to load
Modules = mod_logid

# server_data_conf related confs
hostRuleConf = server_data_conf/host_rule.data
routeRuleConf = server_data_conf/route_rule.data
clusterConf = server_data_conf/cluster_conf.data

# gslb related confs 
clusterTableConf = cluster_conf/cluster_table.data
gslbConf = cluster_conf/gslb.data

# interval for get diff of proxy-state
monitorInterval = 20

[HttpsBasic]
# listen port and cert conf for https
serverCertConf = tls_conf/server_cert_conf.data

# supported cipherSuites preference settings

# ciphersuites implemented in golang
#     TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
#     TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
#     TLS_ECDHE_RSA_WITH_RC4_128_SHA
#     TLS_ECDHE_ECDSA_WITH_RC4_128_SHA
#     TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
#     TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
#     TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
#     TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
#     TLS_RSA_WITH_RC4_128_SHA
#     TLS_RSA_WITH_AES_128_CBC_SHA
#     TLS_RSA_WITH_AES_256_CBC_SHA
#     TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
#     TLS_RSA_WITH_3DES_EDE_CBC_SHA
#
cipherSuites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
cipherSuites=TLS_ECDHE_RSA_WITH_RC4_128_SHA
cipherSuites=TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
cipherSuites=TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
cipherSuites=TLS_RSA_WITH_RC4_128_SHA
cipherSuites=TLS_RSA_WITH_AES_128_CBC_SHA
cipherSuites=TLS_RSA_WITH_AES_256_CBC_SHA
cipherSuites=TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA
cipherSuites=TLS_RSA_WITH_3DES_EDE_CBC_SHA
cipherSuites=TLS_CIPHER_SUITES_NOT_SUPPORT

# supported curve perference settings
# support curves: CurveP256, CurveP384, CurveP521
curvePreferences=CurveP256

ClientCABaseDir = ../data/tls_conf/client_cas

[SessionCache]
# disable session cache or not
SessionCacheDisabled = false

# tcp address of redis server
servers = "10.1.2.3:9000"

# connection params (ms)
connectTimeout = 10 
readTimeout = 10
writeTimeout = 10

# max idle connections in connection pool
maxIdle = 10

# expire time for session state (second)
sessionExpire = 600000

[SessionTicket]
# disable session ticket or not
SessionTicketsDisabled = false
# session ticket key
SessionTicketKeyFile = tls_conf/session_ticket_key.data
